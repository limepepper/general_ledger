# Generated by Django 5.1.1 on 2024-09-29 22:44

import datetime
import django.core.validators
import django.db.models.deletion
import general_ledger.models.file_upload
import simple_history.models
import uuid
import xstate_machine
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("code", models.CharField(blank=True, max_length=20)),
                ("currency", models.CharField(default="GBP", max_length=3)),
                ("is_system", models.BooleanField(default=False)),
                ("is_placeholder", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
            ],
            options={
                "verbose_name_plural": "accounts",
                "db_table": "gl_account",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AccountType",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("A", "Asset"),
                            ("L", "Liability"),
                            ("E", "Equity"),
                            ("R", "Revenue"),
                            ("X", "Expense"),
                        ],
                        default="A",
                        max_length=20,
                    ),
                ),
                ("is_deprecated", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Account Type",
                "verbose_name_plural": "Account Types",
                "db_table": "gl_account_type",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DocumentNumberSequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prefix", models.CharField(max_length=10, unique=True)),
                ("last_number", models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="FileUpload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=general_ledger.models.file_upload.generate_unique_filename
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "uploaded_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "original_file_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("file_type", models.CharField(blank=True, max_length=50, null=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("processing_error", models.TextField(blank=True, null=True)),
                ("sha256", models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="XeroGlImport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("journal_number", models.CharField(max_length=12)),
                ("journal_date", models.DateField()),
                ("account_name", models.CharField(max_length=200, null=True)),
                ("account_code", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=20)),
                ("net_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("gst_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("gross_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("tax_code", models.CharField(max_length=10, null=True)),
                ("reference", models.CharField(blank=True, max_length=200)),
                ("description", models.CharField(blank=True, max_length=200)),
                ("bank_account_code", models.CharField(max_length=20, null=True)),
            ],
            options={
                "verbose_name": "XeroGlImport",
                "verbose_name_plural": "XeroGlImports",
                "db_table": "gl_xero_gl_import",
                "ordering": ["journal_date"],
            },
        ),
        migrations.CreateModel(
            name="Bank",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="bank_account",
                        serialize=False,
                        to="general_ledger.account",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("account_number", models.CharField(max_length=20, unique=True)),
                (
                    "routing_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("sort_code", models.CharField(max_length=20, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("CH", "Checking"), ("SA", "Savings")],
                        default="CH",
                        max_length=2,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_locked", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Bank",
                "verbose_name_plural": "Banks",
                "db_table": "gl_bank",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="account",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="general_ledger.accounttype",
            ),
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sales_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "purchases_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "invoice_sequence",
                    models.PositiveIntegerField(
                        default=1, help_text="The next number to use for invoices"
                    ),
                ),
                (
                    "invoice_prefix",
                    models.CharField(
                        default="INV",
                        help_text="The prefix to use for invoices",
                        max_length=10,
                    ),
                ),
                (
                    "bill_sequence",
                    models.PositiveIntegerField(
                        default=1, help_text="The next number to use for bills"
                    ),
                ),
                (
                    "bill_prefix",
                    models.CharField(
                        default="BILL",
                        help_text="The prefix to use for Bill numbers",
                        max_length=10,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name must be at least 3 characters long.",
                        max_length=70,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(3)],
                        verbose_name="Book Name",
                    ),
                ),
                ("is_demo", models.BooleanField(default=False)),
                ("is_vat_registered", models.BooleanField(default=False)),
                (
                    "business_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "business_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("vat_number", models.CharField(blank=True, max_length=12, null=True)),
                (
                    "company_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                ("business_website", models.URLField(blank=True, null=True)),
                (
                    "business_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "business_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "accounts_payable",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "accounts_receivable",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "purchases_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "sales_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "books",
                "db_table": "gl_book",
            },
        ),
        migrations.AddField(
            model_name="accounttype",
            name="book",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="general_ledger.book"
            ),
        ),
        migrations.CreateModel(
            name="ChartOfAccounts",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_system", models.BooleanField(default=False)),
                ("is_placeholder", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.book",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chart of Accounts",
                "verbose_name_plural": "Charts of Accounts",
                "db_table": "gl_coa",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="account",
            name="coa",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="general_ledger.chartofaccounts",
            ),
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("address", models.CharField(blank=True, max_length=100)),
                ("phone", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254)),
                (
                    "company_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                ("is_customer", models.BooleanField(default=True)),
                ("is_supplier", models.BooleanField(default=False)),
                ("is_demo", models.BooleanField(default=False)),
                ("is_vat_registered", models.BooleanField(default=False)),
                ("vat_number", models.CharField(blank=True, max_length=12, null=True)),
                (
                    "sales_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "purchases_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.book",
                    ),
                ),
                (
                    "purchases_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchases_contacts",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "sales_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sales_contacts",
                        to="general_ledger.account",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Contacts",
                "db_table": "gl_contact",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Ledger",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_posted", models.BooleanField(default=False)),
                ("is_locked", models.BooleanField(default=False)),
                ("is_system", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.book",
                    ),
                ),
                (
                    "coa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.chartofaccounts",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ledger",
                "verbose_name_plural": "Ledgers",
                "db_table": "gl_ledger",
                "ordering": ["name"],
                "unique_together": {("name", "book"), ("slug", "book")},
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sales_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "purchases_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255)),
                ("invoice_number", models.CharField(max_length=20, unique=True)),
                ("date", models.DateField(default=datetime.date.today)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_locked", models.BooleanField(default=False)),
                ("is_system", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DR", "Draft"),
                            ("AA", "Awaiting Approval"),
                            ("AP", "Awaiting Payment"),
                            ("PD", "Paid"),
                        ],
                        default="DR",
                        max_length=2,
                    ),
                ),
                (
                    "tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=4, default=0, max_digits=20),
                ),
                (
                    "accounts_payable",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "accounts_receivable",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        limit_choices_to={"is_customer": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.contact",
                    ),
                ),
                (
                    "purchases_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "sales_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "ledger",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.ledger",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "db_table": "gl_invoice",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date", models.DateField()),
                (
                    "amount",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=16),
                ),
                ("is_posted", models.BooleanField(default=False)),
                ("is_paid", models.BooleanField(default=False)),
                ("is_locked", models.BooleanField(default=False)),
                ("is_system", models.BooleanField(default=False)),
                (
                    "state",
                    xstate_machine.FSMField(
                        choices=[
                            ("DR", "Draft"),
                            ("RE", "Recorded"),
                            ("PO", "Posted"),
                            ("PA", "Partial"),
                            ("CO", "Complete"),
                            ("CA", "Cancelled"),
                            ("VO", "Void"),
                        ],
                        default="DR",
                        max_length=50,
                    ),
                ),
                (
                    "ledger",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.ledger",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "db_table": "gl_payment",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=4, max_digits=16)),
                ("from_object_id", models.UUIDField()),
                ("to_object_id", models.UUIDField()),
                (
                    "from_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "from_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_from",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="general_ledger.payment",
                    ),
                ),
                (
                    "to_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "to_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_to",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PurchaseInvoice",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sales_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "purchases_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255)),
                ("invoice_number", models.CharField(max_length=20, unique=True)),
                ("date", models.DateField(default=datetime.date.today)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_locked", models.BooleanField(default=False)),
                ("is_system", models.BooleanField(default=False)),
                (
                    "tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(decimal_places=4, default=0, max_digits=10),
                ),
                (
                    "state",
                    xstate_machine.FSMField(
                        choices=[
                            ("DR", "Draft"),
                            ("RE", "Recorded"),
                            ("PO", "Posted"),
                            ("PA", "Partial"),
                            ("CO", "Complete"),
                            ("CA", "Cancelled"),
                            ("VO", "Void"),
                        ],
                        default="DR",
                        max_length=50,
                    ),
                ),
                (
                    "accounts_payable",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "accounts_receivable",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        limit_choices_to={"is_customer": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.contact",
                    ),
                ),
                (
                    "ledger",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.ledger",
                    ),
                ),
                (
                    "purchases_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "sales_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bill",
                "verbose_name_plural": "Bills",
                "db_table": "gl_bill",
            },
        ),
        migrations.CreateModel(
            name="TaxRate",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(blank=True)),
                ("name", models.CharField(max_length=70)),
                (
                    "short_name",
                    models.CharField(max_length=6, verbose_name="Short Name"),
                ),
                (
                    "rate",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=8),
                ),
                ("is_visible", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_default", models.BooleanField(default=False)),
                ("effective_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.book",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tax Rate",
                "verbose_name_plural": "Tax Rates",
                "db_table": "gl_tax_rate",
            },
        ),
        migrations.CreateModel(
            name="PurchaseInvoiceLine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("name", models.CharField(blank=True, max_length=100)),
                ("quantity", models.PositiveIntegerField()),
                ("unit_price", models.DecimalField(decimal_places=4, max_digits=16)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.account",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="general_ledger.purchaseinvoice",
                    ),
                ),
                (
                    "vat_rate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.taxrate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bill Line Item",
                "verbose_name_plural": "Bill Line Item",
                "db_table": "gl_purchaseinvoice_line_item",
            },
        ),
        migrations.AddField(
            model_name="purchaseinvoice",
            name="purchases_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="purchaseinvoice",
            name="sales_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.CreateModel(
            name="InvoiceLine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("name", models.CharField(blank=True, max_length=100)),
                ("quantity", models.DecimalField(decimal_places=0, max_digits=10)),
                ("unit_price", models.DecimalField(decimal_places=4, max_digits=16)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.account",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoice_lines",
                        to="general_ledger.invoice",
                    ),
                ),
                (
                    "vat_rate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.taxrate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice Line Item",
                "verbose_name_plural": "Invoice Line Items",
                "db_table": "gl_line_item",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="invoice",
            name="purchases_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="sales_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="purchases_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchases_tax_contacts",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="sales_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sales_tax_contacts",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="purchases_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="sales_tax_rate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="general_ledger.taxrate",
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="tax_rate",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="general_ledger.taxrate"
            ),
        ),
        migrations.CreateModel(
            name="TaxType",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("is_visible", models.BooleanField(default=True)),
                ("is_deprecated", models.BooleanField(default=False)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.book",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tax Type",
                "verbose_name_plural": "Tax Type",
                "db_table": "gl_tax_type",
            },
        ),
        migrations.AddField(
            model_name="taxrate",
            name="tax_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="general_ledger.taxtype"
            ),
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("description", models.CharField(max_length=200)),
                (
                    "post_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="post_date"
                    ),
                ),
                (
                    "trans_date",
                    models.DateField(blank=True, null=True, verbose_name="trans_date"),
                ),
                (
                    "trans_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="trans_date_time"
                    ),
                ),
                ("is_posted", models.BooleanField(default=False)),
                ("is_locked", models.BooleanField(default=False)),
                (
                    "ledger",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.ledger",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "db_table": "gl_transaction",
                "ordering": ["trans_date"],
            },
        ),
        migrations.CreateModel(
            name="PaymentTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.payment",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.transaction",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="payment",
            name="transactions",
            field=models.ManyToManyField(
                related_name="payments",
                through="general_ledger.PaymentTransaction",
                to="general_ledger.transaction",
            ),
        ),
        migrations.CreateModel(
            name="InvoiceTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.invoice",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.transaction",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="invoice",
            name="transactions",
            field=models.ManyToManyField(
                related_name="invoices",
                through="general_ledger.InvoiceTransaction",
                to="general_ledger.transaction",
            ),
        ),
        migrations.CreateModel(
            name="Entry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("description", models.CharField(max_length=200)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Account of the transaction.",
                        max_digits=20,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Amount",
                    ),
                ),
                (
                    "tx_type",
                    models.CharField(
                        choices=[("Dr", "Debit"), ("Cr", "Credit")],
                        default="Dr",
                        max_length=10,
                        verbose_name="Tx Type",
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.account",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.transaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "Entry",
                "verbose_name_plural": "Transaction Entries",
                "db_table": "gl_transaction_entry",
                "ordering": ["transaction__trans_date"],
            },
        ),
        migrations.CreateModel(
            name="UserBookAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_read_only", models.BooleanField(default=False)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.book",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="users",
            field=models.ManyToManyField(
                related_name="accessible_books",
                through="general_ledger.UserBookAccess",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="bank_account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bank_accounts",
                to="general_ledger.bank",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalInvoice",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=22, null=True)),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4)),
                (
                    "created_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "sales_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "purchases_tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255)),
                ("invoice_number", models.CharField(db_index=True, max_length=20)),
                ("date", models.DateField(default=datetime.date.today)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_locked", models.BooleanField(default=False)),
                ("is_system", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DR", "Draft"),
                            ("AA", "Awaiting Approval"),
                            ("AP", "Awaiting Payment"),
                            ("PD", "Paid"),
                        ],
                        default="DR",
                        max_length=2,
                    ),
                ),
                (
                    "tax_inclusive",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inc", "Inclusive"),
                            ("Exc", "Exclusive"),
                            ("Non", "None"),
                        ],
                        default="Exc",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=4, default=0, max_digits=20),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accounts_payable",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "accounts_receivable",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={"is_customer": True},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.contact",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "purchases_account",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "sales_account",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.account",
                    ),
                ),
                (
                    "ledger",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.ledger",
                    ),
                ),
                (
                    "purchases_tax_rate",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.taxrate",
                    ),
                ),
                (
                    "sales_tax_rate",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.taxrate",
                    ),
                ),
                (
                    "bank_account",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="general_ledger.bank",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Invoice",
                "verbose_name_plural": "historical Invoices",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="BankStatementLine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date", models.DateField()),
                (
                    "name",
                    models.CharField(
                        help_text="This is the description of the transaction. It is confusingly called 'name' by the OFX specification. It is populated from the description when provided",
                        max_length=255,
                    ),
                ),
                ("payee", models.CharField(blank=True, max_length=255, null=True)),
                ("hash", models.CharField(blank=True, max_length=50)),
                ("index", models.PositiveIntegerField(default=0)),
                ("amount", models.DecimalField(decimal_places=4, max_digits=16)),
                (
                    "balance",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=16, null=True
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=124, null=True),
                ),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("is_matched", models.BooleanField(default=False)),
                ("is_reconciled", models.BooleanField(default=False)),
                (
                    "bank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.bank",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bank Statement Line",
                "verbose_name_plural": "Bank Statement Lines",
                "db_table": "gl_bank_statement_line",
                "ordering": ["date", "name"],
            },
        ),
        migrations.CreateModel(
            name="BankBalance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("balance", models.DecimalField(decimal_places=4, max_digits=10)),
                ("balance_date", models.DateTimeField()),
                (
                    "balance_source",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "bank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="general_ledger.bank",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bank Balance",
                "verbose_name_plural": "Bank Balances",
                "db_table": "gl_bank_balance",
            },
        ),
        migrations.AddField(
            model_name="bank",
            name="book",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="general_ledger.book"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accounttype",
            unique_together={("slug", "book")},
        ),
        migrations.AddConstraint(
            model_name="contact",
            constraint=models.UniqueConstraint(
                fields=("name", "book"), name="name_book_uniq"
            ),
        ),
        migrations.AddConstraint(
            model_name="account",
            constraint=models.UniqueConstraint(
                fields=("name", "coa"), name="name_coa_uniq"
            ),
        ),
        migrations.AddConstraint(
            model_name="account",
            constraint=models.UniqueConstraint(
                fields=("slug", "coa"), name="slug_coa_uniq"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="taxtype",
            unique_together={("name", "book"), ("slug", "book")},
        ),
        migrations.AddConstraint(
            model_name="taxrate",
            constraint=models.UniqueConstraint(
                fields=("slug", "tax_type"), name="slug_tax_type_uniq"
            ),
        ),
        migrations.AddConstraint(
            model_name="taxrate",
            constraint=models.UniqueConstraint(
                fields=("slug", "book"), name="tax_rate_uniq_slug_book"
            ),
        ),
        migrations.AddConstraint(
            model_name="taxrate",
            constraint=models.UniqueConstraint(
                fields=("name", "book"), name="tax_rate_uniq_name_book"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="paymenttransaction",
            unique_together={("payment", "transaction")},
        ),
        migrations.AlterUniqueTogether(
            name="invoicetransaction",
            unique_together={("invoice", "transaction")},
        ),
        migrations.AlterUniqueTogether(
            name="userbookaccess",
            unique_together={("user", "book")},
        ),
        migrations.AddConstraint(
            model_name="book",
            constraint=models.UniqueConstraint(
                fields=("owner", "slug"), name="book_uniq_owner_slug"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bank",
            unique_together={("book", "slug")},
        ),
    ]
